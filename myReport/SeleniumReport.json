{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-03T02:19:33.947Z",
    "end": "2022-09-03T02:19:42.743Z",
    "duration": 8796,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e1c51262-d3a1-4bd6-b476-306748157b63",
      "title": "",
      "fullFile": "T:\\TTTN\\selenium-web-sale\\testcases\\user\\Login.js",
      "file": "\\testcases\\user\\Login.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "01976b74-8284-4080-8093-a16c70099ba8",
          "title": "Login",
          "fullFile": "T:\\TTTN\\selenium-web-sale\\testcases\\user\\Login.js",
          "file": "\\testcases\\user\\Login.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Open homepage in \"Login\"",
              "fullTitle": "Login \"before all\" hook: Open homepage in \"Login\"",
              "timedOut": false,
              "duration": 5758,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "log.info(\"Pre-Condition - 01: Open homepage\");\ndriver = await getBrowserDriver.openHomePage();\nawait driver.sleep(2000);\nhomePage.constructorDriver(driver);\nloginPage.constructorDriver(driver);\nregisterPage.constructorDriver(driver);\nlog.info(\"Pre-Condition - 02: Register successfully.\");\nhomePage.clickToRegisterLink();\nawait driver.sleep(2000);(driver);\nusername = registerPage.getRandomUsername();\nregisterPage.inputUsernameTextbox(username);\nregisterPage.inputPasswordTextbox(registerData.validInfor.password);\nregisterPage.inputConfPasswordTextbox(registerData.validInfor.password);\nregisterPage.inputFullNameTextbox(registerData.validInfor.fullName);\nregisterPage.inputEmailTextbox(registerData.validInfor.email);\nregisterPage.inputBirthdayTextbox(registerData.validInfor.birthday);\nregisterPage.clickToRegisterButton();\nawait driver.sleep(1000);\nawait registerPage.verifySuccessfullRegisterMessage(registerData.successfullMessage.successfullRegister);",
              "err": {},
              "uuid": "14e34ca6-5034-4b55-b361-c27737767011",
              "parentUUID": "01976b74-8284-4080-8093-a16c70099ba8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: Close browser in \"Login\"",
              "fullTitle": "Login \"after all\" hook: Close browser in \"Login\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "21a6d2c3-123b-47f4-858f-789b0e1865b6",
              "parentUUID": "01976b74-8284-4080-8093-a16c70099ba8",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Login\"",
              "fullTitle": "Login \"after each\" hook in \"Login\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.currentTest.state == 'passed'){\n    log.info(\"-------------------PASSED-----------------\");\n}\nif(this.currentTest.state == 'failed'){\n    log.info(\"-------------------FAILED-----------------\");\n    //this.retries(1);\n    let imageFileName = this.currentTest.title + '.jpeg';\n    driver.takeScreenshot().then(\n        function(image){\n            require('fs').writeFileSync('./screenshots/user/login/' + imageFileName, image, 'base64')\n        }\n    )\n    addContext(this,'Following comes the failed test image')\n    addContext(this, '../screenshots/user/login/' + imageFileName)\n}",
              "err": {},
              "uuid": "9dbd721c-40b7-43d1-b3ed-efab390fb611",
              "parentUUID": "01976b74-8284-4080-8093-a16c70099ba8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "TC01 Login with empty username",
              "fullTitle": "Login TC01 Login with empty username",
              "timedOut": false,
              "duration": 3026,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "log.info(\"TC1 Login with empty username\");\nlog.info(\"Login - Step 01: Navigate to Login page\");\nhomePage.clickToLoginLink();\nawait driver.sleep(2000);\nlog.info(\"Login - Step 02: Click to 'Submit' button\");\nloginPage.clickSubmitButton();\nawait driver.sleep(1000);\nlog.info(\"Login - Step 03: Verify error message in alert.\");\nlet alert = await driver.switchTo().alert();\nassert.equal(await alert.getText(), \"Mời bạn nhập tên đăng nhập\");\nlog.info(\"Login - Step 04: Click to 'OK' button in alert\");\nawait alert.accept();",
              "err": {},
              "uuid": "ef182298-61e9-4d7e-842f-89fc21ffaca4",
              "parentUUID": "01976b74-8284-4080-8093-a16c70099ba8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef182298-61e9-4d7e-842f-89fc21ffaca4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3026,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "SeleniumReport",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "./myReport",
        "reportFilename": "SeleniumReport"
      },
      "version": "6.2.0"
    }
  }
}