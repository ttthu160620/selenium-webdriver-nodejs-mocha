{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-10T13:12:11.276Z",
    "end": "2022-09-10T13:12:29.444Z",
    "duration": 18168,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c27a145a-eacd-4ff4-9be9-0c338f13da88",
      "title": "",
      "fullFile": "T:\\TTTN\\selenium-web-sale\\testcases\\user\\Register.js",
      "file": "\\testcases\\user\\Register.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1c28e77c-459b-4bbe-8894-2f687f778ff3",
          "title": "Register",
          "fullFile": "T:\\TTTN\\selenium-web-sale\\testcases\\user\\Register.js",
          "file": "\\testcases\\user\\Register.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Open Homepage in \"Register\"",
              "fullTitle": "Register \"before all\" hook: Open Homepage in \"Register\"",
              "timedOut": false,
              "duration": 2737,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "log.info(\"Pre-Condition - 01: Open homepage\");\ndriver = await openBrowser.openHomePage();\nawait driver.sleep(2000);\nregisterPage.constructorDriver(driver);\nhomePage.constructorDriver(driver);",
              "err": {},
              "uuid": "a4b8e60c-5465-412c-8a27-952bd179ac96",
              "parentUUID": "1c28e77c-459b-4bbe-8894-2f687f778ff3",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Click to Register Link in \"Register\"",
              "fullTitle": "Register \"before each\" hook: Click to Register Link in \"Register\"",
              "timedOut": false,
              "duration": 2002,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "log.info(\"Register: Navigate to Register page\");\nhomePage.clickToRegisterLink();\nawait driver.sleep(2000);",
              "err": {},
              "uuid": "e16d694f-0e84-4be5-a6f6-219d8af3d8be",
              "parentUUID": "1c28e77c-459b-4bbe-8894-2f687f778ff3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: Close browser in \"Register\"",
              "fullTitle": "Register \"after all\" hook: Close browser in \"Register\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "56153a50-f69b-4e79-91ef-7eb5066d73ce",
              "parentUUID": "1c28e77c-459b-4bbe-8894-2f687f778ff3",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Register\"",
              "fullTitle": "Register \"after each\" hook in \"Register\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.currentTest.state == 'passed'){\n    log.info(\"-------------------PASSED-----------------\");\n}\nif(this.currentTest.state == 'failed'){\n    log.info(\"-------------------PASSED-----------------\");\n    let imageFileName = this.currentTest.title + '.jpeg';\n    driver.takeScreenshot().then(\n        function(image){\n            require('fs').writeFileSync('./screenshots/user/register/' + imageFileName, image, 'base64')\n        }\n    )\n    addContext(this,'Following comes the failed test image')\n    addContext(this, '../screenshots/user/register/' + imageFileName)\n}",
              "err": {},
              "uuid": "c816623a-26e2-40cd-81c9-adc734cd36e7",
              "parentUUID": "1c28e77c-459b-4bbe-8894-2f687f778ff3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "TC01 Register with empty value",
              "fullTitle": "Register TC01 Register with empty value",
              "timedOut": false,
              "duration": 1204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "log.info(\"TC01 Register with empty value\")\nlog.info(\"Register - Step 01: Click to 'Register' button\");\nregisterPage.clickToRegisterButton();\nawait driver.sleep(1000);\nlog.info(\"Register - Step 02: Verify username empty message.\");\nawait registerPage.verifyEmptyUsernameMessage(registerData.emptyMessage.username);\nlog.info(\"Register - Step 03: Verify password empty message.\");\nawait registerPage.verifyEmptyPasswordMessage(registerData.emptyMessage.password);\nlog.info(\"Register - Step 04: Verify confirm password empty message.\");\nawait registerPage.verifyEmptyConfPasswordMessage(registerData.emptyMessage.confirmPassword);\nlog.info(\"Register - Step 05: Verify fullname empty message.\");\nawait registerPage.verifyEmptyFullNameMessage(registerData.emptyMessage.fullName);\nlog.info(\"Register - Step 06: Verify email empty message.\");\nawait registerPage.verifyEmptyEmailMessage(registerData.emptyMessage.email);",
              "err": {},
              "uuid": "2e9742ef-2ad7-4543-9d69-889aeff976a9",
              "parentUUID": "1c28e77c-459b-4bbe-8894-2f687f778ff3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC02 Register with password have less than 6 characters",
              "fullTitle": "Register TC02 Register with password have less than 6 characters",
              "timedOut": false,
              "duration": 1042,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "log.info(\"TC02 Register with password have less than 6 characters\");\nlog.info(\"Register - Step 01: Enter to Password textbox with value have less than 6 characters is '\" + registerData.invalidInfor.password +\"'\");\nregisterPage.inputPasswordTextbox(registerData.invalidInfor.password);\nlog.info(\"Register - Step 02: Click to 'Register' button\");\nregisterPage.clickToRegisterButton();\nawait driver.sleep(1000);\nlog.info(\"Register - Step 03: Verify password error message\");\nawait registerPage.verifyInvalidPasswordMessage(registerData.invalidMessage.password);",
              "err": {},
              "uuid": "628eb1fe-9008-4aab-b536-c3cd7ec013d6",
              "parentUUID": "1c28e77c-459b-4bbe-8894-2f687f778ff3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC03 Register with confirm password different password",
              "fullTitle": "Register TC03 Register with confirm password different password",
              "timedOut": false,
              "duration": 1043,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "log.info(\"TC03 Register with confirm password different password\");\nlog.info(\"Register - Step 01: Enter to Password textbox with valid value is '\" + registerData.validInfor.password +\"'\");\nregisterPage.inputPasswordTextbox(registerData.validInfor.password);\nlog.info(\"Register - Step 02: Enter to Confirm Password textbox with invalid value is '\" + registerData.invalidInfor.confirmPassword +\"'\");\nregisterPage.inputConfPasswordTextbox(registerData.invalidInfor.confirmPassword);\nlog.info(\"Register - Step 03: Click to 'Register' button\");\nregisterPage.clickToRegisterButton();\nawait driver.sleep(1000);\nlog.info(\"Register - Step 04: Verify confirm passwor error message\");\nawait registerPage.verifyInvalidConfPasswordMessage(registerData.invalidMessage.confirmPassword);",
              "err": {},
              "uuid": "9d90c9fb-ebb6-47a2-851e-3c3c49ad25c1",
              "parentUUID": "1c28e77c-459b-4bbe-8894-2f687f778ff3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC04 Register with invalid email",
              "fullTitle": "Register TC04 Register with invalid email",
              "timedOut": false,
              "duration": 1049,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "log.info(\"TC04 Register with invalid email\");\nlog.info(\"Register - Step 01: Enter to Email textbox with invalid email is '\" + registerData.invalidInfor.email + \"'\");\nregisterPage.inputEmailTextbox(registerData.invalidInfor.email);\nlog.info(\"Register - Step 02: Click to 'Register' button\");\nregisterPage.clickToRegisterButton();\nawait driver.sleep(1000);\nlog.info(\"Register - Step 03: Verify email error message\");\nawait registerPage.verifyInvalidEmailMessage(registerData.invalidMessage.email);",
              "err": {},
              "uuid": "65fba159-0871-4bf1-92cf-2e4748efc38e",
              "parentUUID": "1c28e77c-459b-4bbe-8894-2f687f778ff3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC05 Register successfully",
              "fullTitle": "Register TC05 Register successfully",
              "timedOut": false,
              "duration": 1059,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "log.info(\"TC05 Register successfully\");\nlog.info(\"Register - Step 01: Enter to Username with valid value is: '\" + registerPage.getRandomUsername() +\"'\");\nregisterPage.inputUsernameTextbox(registerPage.getRandomUsername());\nlog.info(\"Register - Step 02: Enter to Password with valid value is: '\" + registerData.validInfor.password +\"'\");\nregisterPage.inputPasswordTextbox(registerData.validInfor.password);\nlog.info(\"Register - Step 03: Enter to Confirm Password with valid value is: '\" + registerData.validInfor.password +\"'\");\nregisterPage.inputConfPasswordTextbox(registerData.validInfor.password);\nlog.info(\"Register - Step 04: Enter to Fullname with valid value is: '\" + registerData.validInfor.fullName +\"'\");\nregisterPage.inputFullNameTextbox(registerData.validInfor.fullName);\nlog.info(\"Register - Step 05: Enter to Email with valid value is: '\" + registerData.validInfor.email +\"'\");\nregisterPage.inputEmailTextbox(registerData.validInfor.email);\nlog.info(\"Register - Step 06: Enter to Birthday with valid value is: '\" + registerData.validInfor.birthday +\"'\");\nregisterPage.inputBirthdayTextbox(registerData.validInfor.birthday);\nlog.info(\"Register - Step 07: Click to 'Regiister' button\");\nregisterPage.clickToRegisterButton();\nawait driver.sleep(1000);\nlog.info(\"Register - Step 08: Verify successful register message is displayed.\");\nawait registerPage.verifySuccessfullRegisterMessage(registerData.successfullMessage.successfullRegister);",
              "err": {},
              "uuid": "7a8825ba-0b03-4e95-ba70-449c53753490",
              "parentUUID": "1c28e77c-459b-4bbe-8894-2f687f778ff3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2e9742ef-2ad7-4543-9d69-889aeff976a9",
            "628eb1fe-9008-4aab-b536-c3cd7ec013d6",
            "9d90c9fb-ebb6-47a2-851e-3c3c49ad25c1",
            "65fba159-0871-4bf1-92cf-2e4748efc38e",
            "7a8825ba-0b03-4e95-ba70-449c53753490"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5397,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "SeleniumReport",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "./myReport",
        "reportFilename": "SeleniumReport"
      },
      "version": "6.2.0"
    }
  }
}